
package logica;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "wsPreguntado", targetNamespace = "http://Logica/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WsPreguntado {


    /**
     * 
     * @param usuario
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "mostrarRol", targetNamespace = "http://Logica/", className = "logica.MostrarRol")
    @ResponseWrapper(localName = "mostrarRolResponse", targetNamespace = "http://Logica/", className = "logica.MostrarRolResponse")
    @Action(input = "http://Logica/wsPreguntado/mostrarRolRequest", output = "http://Logica/wsPreguntado/mostrarRolResponse")
    public List<String> mostrarRol(
        @WebParam(name = "usuario", targetNamespace = "")
        String usuario);

    /**
     * 
     * @param carrera
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addCarrera", targetNamespace = "http://Logica/", className = "logica.AddCarrera")
    @ResponseWrapper(localName = "addCarreraResponse", targetNamespace = "http://Logica/", className = "logica.AddCarreraResponse")
    @Action(input = "http://Logica/wsPreguntado/addCarreraRequest", output = "http://Logica/wsPreguntado/addCarreraResponse")
    public boolean addCarrera(
        @WebParam(name = "carrera", targetNamespace = "")
        String carrera);

    /**
     * 
     * @param nombre
     * @param efectividad
     * @param rareza
     * @param tipo
     * @param bGana
     * @param descripcion
     * @param bPierde
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addItem", targetNamespace = "http://Logica/", className = "logica.AddItem")
    @ResponseWrapper(localName = "addItemResponse", targetNamespace = "http://Logica/", className = "logica.AddItemResponse")
    @Action(input = "http://Logica/wsPreguntado/addItemRequest", output = "http://Logica/wsPreguntado/addItemResponse")
    public boolean addItem(
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "descripcion", targetNamespace = "")
        String descripcion,
        @WebParam(name = "rareza", targetNamespace = "")
        int rareza,
        @WebParam(name = "efectividad", targetNamespace = "")
        int efectividad,
        @WebParam(name = "bGana", targetNamespace = "")
        int bGana,
        @WebParam(name = "bPierde", targetNamespace = "")
        int bPierde,
        @WebParam(name = "tipo", targetNamespace = "")
        String tipo);

    /**
     * 
     * @param carrera
     * @param curso
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addCurso", targetNamespace = "http://Logica/", className = "logica.AddCurso")
    @ResponseWrapper(localName = "addCursoResponse", targetNamespace = "http://Logica/", className = "logica.AddCursoResponse")
    @Action(input = "http://Logica/wsPreguntado/addCursoRequest", output = "http://Logica/wsPreguntado/addCursoResponse")
    public boolean addCurso(
        @WebParam(name = "carrera", targetNamespace = "")
        String carrera,
        @WebParam(name = "curso", targetNamespace = "")
        String curso);

    /**
     * 
     * @param usuario
     * @return
     *     returns java.util.List<java.lang.Integer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "mostrarExp", targetNamespace = "http://Logica/", className = "logica.MostrarExp")
    @ResponseWrapper(localName = "mostrarExpResponse", targetNamespace = "http://Logica/", className = "logica.MostrarExpResponse")
    @Action(input = "http://Logica/wsPreguntado/mostrarExpRequest", output = "http://Logica/wsPreguntado/mostrarExpResponse")
    public List<Integer> mostrarExp(
        @WebParam(name = "usuario", targetNamespace = "")
        String usuario);

    /**
     * 
     * @param usuario
     * @param pass
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "iniciarSesion", targetNamespace = "http://Logica/", className = "logica.IniciarSesion")
    @ResponseWrapper(localName = "iniciarSesionResponse", targetNamespace = "http://Logica/", className = "logica.IniciarSesionResponse")
    @Action(input = "http://Logica/wsPreguntado/iniciarSesionRequest", output = "http://Logica/wsPreguntado/iniciarSesionResponse")
    public String iniciarSesion(
        @WebParam(name = "usuario", targetNamespace = "")
        String usuario,
        @WebParam(name = "pass", targetNamespace = "")
        String pass);

    /**
     * 
     * @param tipo
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "mostrarItem", targetNamespace = "http://Logica/", className = "logica.MostrarItem")
    @ResponseWrapper(localName = "mostrarItemResponse", targetNamespace = "http://Logica/", className = "logica.MostrarItemResponse")
    @Action(input = "http://Logica/wsPreguntado/mostrarItemRequest", output = "http://Logica/wsPreguntado/mostrarItemResponse")
    public List<String> mostrarItem(
        @WebParam(name = "tipo", targetNamespace = "")
        String tipo);

    /**
     * 
     * @param usuario
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "mostrarEmail", targetNamespace = "http://Logica/", className = "logica.MostrarEmail")
    @ResponseWrapper(localName = "mostrarEmailResponse", targetNamespace = "http://Logica/", className = "logica.MostrarEmailResponse")
    @Action(input = "http://Logica/wsPreguntado/mostrarEmailRequest", output = "http://Logica/wsPreguntado/mostrarEmailResponse")
    public List<String> mostrarEmail(
        @WebParam(name = "usuario", targetNamespace = "")
        String usuario);

    /**
     * 
     * @return
     *     returns java.util.List<logica.Pregunta>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listaPregunta", targetNamespace = "http://Logica/", className = "logica.ListaPregunta")
    @ResponseWrapper(localName = "listaPreguntaResponse", targetNamespace = "http://Logica/", className = "logica.ListaPreguntaResponse")
    @Action(input = "http://Logica/wsPreguntado/listaPreguntaRequest", output = "http://Logica/wsPreguntado/listaPreguntaResponse")
    public List<Pregunta> listaPregunta();

    /**
     * 
     * @param usuario
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "bajaUsuario", targetNamespace = "http://Logica/", className = "logica.BajaUsuario")
    @ResponseWrapper(localName = "bajaUsuarioResponse", targetNamespace = "http://Logica/", className = "logica.BajaUsuarioResponse")
    @Action(input = "http://Logica/wsPreguntado/bajaUsuarioRequest", output = "http://Logica/wsPreguntado/bajaUsuarioResponse")
    public boolean bajaUsuario(
        @WebParam(name = "usuario", targetNamespace = "")
        String usuario);

    /**
     * 
     * @param email
     * @param usuario
     * @param pass
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "Registro")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Registro", targetNamespace = "http://Logica/", className = "logica.Registro")
    @ResponseWrapper(localName = "RegistroResponse", targetNamespace = "http://Logica/", className = "logica.RegistroResponse")
    @Action(input = "http://Logica/wsPreguntado/RegistroRequest", output = "http://Logica/wsPreguntado/RegistroResponse")
    public boolean registro(
        @WebParam(name = "usuario", targetNamespace = "")
        String usuario,
        @WebParam(name = "pass", targetNamespace = "")
        String pass,
        @WebParam(name = "email", targetNamespace = "")
        String email);

    /**
     * 
     * @param pregunta
     * @param curso
     * @param nivel
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "crearPregunta", targetNamespace = "http://Logica/", className = "logica.CrearPregunta")
    @ResponseWrapper(localName = "crearPreguntaResponse", targetNamespace = "http://Logica/", className = "logica.CrearPreguntaResponse")
    @Action(input = "http://Logica/wsPreguntado/crearPreguntaRequest", output = "http://Logica/wsPreguntado/crearPreguntaResponse")
    public boolean crearPregunta(
        @WebParam(name = "curso", targetNamespace = "")
        String curso,
        @WebParam(name = "nivel", targetNamespace = "")
        String nivel,
        @WebParam(name = "pregunta", targetNamespace = "")
        String pregunta);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://Logica/", className = "logica.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://Logica/", className = "logica.HelloResponse")
    @Action(input = "http://Logica/wsPreguntado/helloRequest", output = "http://Logica/wsPreguntado/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "mostrarPregunta", targetNamespace = "http://Logica/", className = "logica.MostrarPregunta")
    @ResponseWrapper(localName = "mostrarPreguntaResponse", targetNamespace = "http://Logica/", className = "logica.MostrarPreguntaResponse")
    @Action(input = "http://Logica/wsPreguntado/mostrarPreguntaRequest", output = "http://Logica/wsPreguntado/mostrarPreguntaResponse")
    public List<String> mostrarPregunta();

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "mostrarCursoPregunta", targetNamespace = "http://Logica/", className = "logica.MostrarCursoPregunta")
    @ResponseWrapper(localName = "mostrarCursoPreguntaResponse", targetNamespace = "http://Logica/", className = "logica.MostrarCursoPreguntaResponse")
    @Action(input = "http://Logica/wsPreguntado/mostrarCursoPreguntaRequest", output = "http://Logica/wsPreguntado/mostrarCursoPreguntaResponse")
    public List<String> mostrarCursoPregunta();

    /**
     * 
     * @param pregunta
     * @return
     *     returns java.util.List<java.lang.Boolean>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "mostrarOpcionRespuesta", targetNamespace = "http://Logica/", className = "logica.MostrarOpcionRespuesta")
    @ResponseWrapper(localName = "mostrarOpcionRespuestaResponse", targetNamespace = "http://Logica/", className = "logica.MostrarOpcionRespuestaResponse")
    @Action(input = "http://Logica/wsPreguntado/mostrarOpcionRespuestaRequest", output = "http://Logica/wsPreguntado/mostrarOpcionRespuestaResponse")
    public List<Boolean> mostrarOpcionRespuesta(
        @WebParam(name = "pregunta", targetNamespace = "")
        String pregunta);

    /**
     * 
     * @param pregunta
     * @param correcta
     * @param opcion
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "crearRespuesta", targetNamespace = "http://Logica/", className = "logica.CrearRespuesta")
    @ResponseWrapper(localName = "crearRespuestaResponse", targetNamespace = "http://Logica/", className = "logica.CrearRespuestaResponse")
    @Action(input = "http://Logica/wsPreguntado/crearRespuestaRequest", output = "http://Logica/wsPreguntado/crearRespuestaResponse")
    public boolean crearRespuesta(
        @WebParam(name = "pregunta", targetNamespace = "")
        String pregunta,
        @WebParam(name = "opcion", targetNamespace = "")
        String opcion,
        @WebParam(name = "correcta", targetNamespace = "")
        boolean correcta);

    /**
     * 
     * @param usuario
     * @param pass
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editPassUsuario", targetNamespace = "http://Logica/", className = "logica.EditPassUsuario")
    @ResponseWrapper(localName = "editPassUsuarioResponse", targetNamespace = "http://Logica/", className = "logica.EditPassUsuarioResponse")
    @Action(input = "http://Logica/wsPreguntado/editPassUsuarioRequest", output = "http://Logica/wsPreguntado/editPassUsuarioResponse")
    public boolean editPassUsuario(
        @WebParam(name = "usuario", targetNamespace = "")
        String usuario,
        @WebParam(name = "pass", targetNamespace = "")
        String pass);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "mostrarNivelPregunta", targetNamespace = "http://Logica/", className = "logica.MostrarNivelPregunta")
    @ResponseWrapper(localName = "mostrarNivelPreguntaResponse", targetNamespace = "http://Logica/", className = "logica.MostrarNivelPreguntaResponse")
    @Action(input = "http://Logica/wsPreguntado/mostrarNivelPreguntaRequest", output = "http://Logica/wsPreguntado/mostrarNivelPreguntaResponse")
    public List<String> mostrarNivelPregunta();

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "mostrarAllUsuario", targetNamespace = "http://Logica/", className = "logica.MostrarAllUsuario")
    @ResponseWrapper(localName = "mostrarAllUsuarioResponse", targetNamespace = "http://Logica/", className = "logica.MostrarAllUsuarioResponse")
    @Action(input = "http://Logica/wsPreguntado/mostrarAllUsuarioRequest", output = "http://Logica/wsPreguntado/mostrarAllUsuarioResponse")
    public List<String> mostrarAllUsuario();

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.Boolean>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "mostrarEstadoPregunta", targetNamespace = "http://Logica/", className = "logica.MostrarEstadoPregunta")
    @ResponseWrapper(localName = "mostrarEstadoPreguntaResponse", targetNamespace = "http://Logica/", className = "logica.MostrarEstadoPreguntaResponse")
    @Action(input = "http://Logica/wsPreguntado/mostrarEstadoPreguntaRequest", output = "http://Logica/wsPreguntado/mostrarEstadoPreguntaResponse")
    public List<Boolean> mostrarEstadoPregunta();

    /**
     * 
     * @param pregunta
     * @param nivel
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editNivelPregunta", targetNamespace = "http://Logica/", className = "logica.EditNivelPregunta")
    @ResponseWrapper(localName = "editNivelPreguntaResponse", targetNamespace = "http://Logica/", className = "logica.EditNivelPreguntaResponse")
    @Action(input = "http://Logica/wsPreguntado/editNivelPreguntaRequest", output = "http://Logica/wsPreguntado/editNivelPreguntaResponse")
    public boolean editNivelPregunta(
        @WebParam(name = "nivel", targetNamespace = "")
        String nivel,
        @WebParam(name = "pregunta", targetNamespace = "")
        String pregunta);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "mostrarPreguntaPendiente", targetNamespace = "http://Logica/", className = "logica.MostrarPreguntaPendiente")
    @ResponseWrapper(localName = "mostrarPreguntaPendienteResponse", targetNamespace = "http://Logica/", className = "logica.MostrarPreguntaPendienteResponse")
    @Action(input = "http://Logica/wsPreguntado/mostrarPreguntaPendienteRequest", output = "http://Logica/wsPreguntado/mostrarPreguntaPendienteResponse")
    public List<String> mostrarPreguntaPendiente();

    /**
     * 
     * @param usuario
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "mostrarUsuario", targetNamespace = "http://Logica/", className = "logica.MostrarUsuario")
    @ResponseWrapper(localName = "mostrarUsuarioResponse", targetNamespace = "http://Logica/", className = "logica.MostrarUsuarioResponse")
    @Action(input = "http://Logica/wsPreguntado/mostrarUsuarioRequest", output = "http://Logica/wsPreguntado/mostrarUsuarioResponse")
    public List<String> mostrarUsuario(
        @WebParam(name = "usuario", targetNamespace = "")
        String usuario);

    /**
     * 
     * @param usuario
     * @return
     *     returns java.util.List<java.lang.Boolean>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "mostrarEstadoUsuario", targetNamespace = "http://Logica/", className = "logica.MostrarEstadoUsuario")
    @ResponseWrapper(localName = "mostrarEstadoUsuarioResponse", targetNamespace = "http://Logica/", className = "logica.MostrarEstadoUsuarioResponse")
    @Action(input = "http://Logica/wsPreguntado/mostrarEstadoUsuarioRequest", output = "http://Logica/wsPreguntado/mostrarEstadoUsuarioResponse")
    public List<Boolean> mostrarEstadoUsuario(
        @WebParam(name = "usuario", targetNamespace = "")
        String usuario);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "mostrarCarreraPregunta", targetNamespace = "http://Logica/", className = "logica.MostrarCarreraPregunta")
    @ResponseWrapper(localName = "mostrarCarreraPreguntaResponse", targetNamespace = "http://Logica/", className = "logica.MostrarCarreraPreguntaResponse")
    @Action(input = "http://Logica/wsPreguntado/mostrarCarreraPreguntaRequest", output = "http://Logica/wsPreguntado/mostrarCarreraPreguntaResponse")
    public List<String> mostrarCarreraPregunta();

    /**
     * 
     * @param usuario
     * @return
     *     returns java.util.List<java.lang.Integer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "mostrarInventario", targetNamespace = "http://Logica/", className = "logica.MostrarInventario")
    @ResponseWrapper(localName = "mostrarInventarioResponse", targetNamespace = "http://Logica/", className = "logica.MostrarInventarioResponse")
    @Action(input = "http://Logica/wsPreguntado/mostrarInventarioRequest", output = "http://Logica/wsPreguntado/mostrarInventarioResponse")
    public List<Integer> mostrarInventario(
        @WebParam(name = "usuario", targetNamespace = "")
        String usuario);

    /**
     * 
     * @param pregunta
     * @param estado
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editEstadoPregunta", targetNamespace = "http://Logica/", className = "logica.EditEstadoPregunta")
    @ResponseWrapper(localName = "editEstadoPreguntaResponse", targetNamespace = "http://Logica/", className = "logica.EditEstadoPreguntaResponse")
    @Action(input = "http://Logica/wsPreguntado/editEstadoPreguntaRequest", output = "http://Logica/wsPreguntado/editEstadoPreguntaResponse")
    public boolean editEstadoPregunta(
        @WebParam(name = "estado", targetNamespace = "")
        boolean estado,
        @WebParam(name = "pregunta", targetNamespace = "")
        String pregunta);

    /**
     * 
     * @param pregunta
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "mostrarRespuesta", targetNamespace = "http://Logica/", className = "logica.MostrarRespuesta")
    @ResponseWrapper(localName = "mostrarRespuestaResponse", targetNamespace = "http://Logica/", className = "logica.MostrarRespuestaResponse")
    @Action(input = "http://Logica/wsPreguntado/mostrarRespuestaRequest", output = "http://Logica/wsPreguntado/mostrarRespuestaResponse")
    public List<String> mostrarRespuesta(
        @WebParam(name = "pregunta", targetNamespace = "")
        String pregunta);

    /**
     * 
     * @param usuario
     * @param rol
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editRolUsuario", targetNamespace = "http://Logica/", className = "logica.EditRolUsuario")
    @ResponseWrapper(localName = "editRolUsuarioResponse", targetNamespace = "http://Logica/", className = "logica.EditRolUsuarioResponse")
    @Action(input = "http://Logica/wsPreguntado/editRolUsuarioRequest", output = "http://Logica/wsPreguntado/editRolUsuarioResponse")
    public boolean editRolUsuario(
        @WebParam(name = "usuario", targetNamespace = "")
        String usuario,
        @WebParam(name = "rol", targetNamespace = "")
        String rol);

}
